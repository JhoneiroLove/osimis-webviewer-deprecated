# This docker file builds the backend, not the frontend (the frontend build is downloaded to be embedded if not available).
# However, the frontend is embedded within the backend:
# The CI generates the frontend build, uploads it to aws and then builds this dockerfile.

FROM jodogne/orthanc-plugins:1.1.0

RUN DEBIAN_FRONTEND=noninteractive apt-get update; apt-get -y install libgdcm2-dev libjpeg-dev git; rm -rf /var/lib/apt/lists/*

# Copy everything required to configure the project and build GDCM
COPY ./Orthanc/ /root/osimis-webviewer/backend/Orthanc/
COPY ./Resources/ /root/osimis-webviewer/backend/Resources/
COPY ./Dependencies/ /root/osimis-webviewer/backend/Dependencies/
COPY ./CMakeLists.txt /root/osimis-webviewer/backend/

# Download, configure & build third parties
RUN cd /root/osimis-webviewer/backend && \
    mkdir Build && cd Build && \
    cmake -DALLOW_DOWNLOADS:BOOL=ON \
    -DCMAKE_BUILD_TYPE:STRING=Release \
    -DUSE_GTEST_DEBIAN_SOURCE_PACKAGE:BOOL=ON \
    -DUSE_SYSTEM_JSONCPP:BOOL=OFF \
    -DBUILD_INTERMEDIATE_TARGETS:BOOL=OFF \
    -DBUILD_FINAL_TARGETS:BOOL=OFF \
    .. && \
    make GDCM -j$(nproc) && \
    make -j$(nproc) WebViewerDependencies

# Copy everything required to build the intermediate library
COPY ./WebViewerLibrary/ /root/osimis-webviewer/backend/WebViewerLibrary/

# Rerun cmake with intermediate targets
RUN cd /root/osimis-webviewer/backend/Build && \
    cmake -DALLOW_DOWNLOADS:BOOL=ON \
    -DCMAKE_BUILD_TYPE:STRING=Release \
    -DUSE_GTEST_DEBIAN_SOURCE_PACKAGE:BOOL=ON \
    -DUSE_SYSTEM_JSONCPP:BOOL=OFF \
    -DBUILD_INTERMEDIATE_TARGETS:BOOL=ON \
    -DBUILD_FINAL_TARGETS:BOOL=OFF \
    .. && \
    make -j$(nproc) WebViewerLibrary

# Set version once it's necessary - must be generated by the user via `git describe --tags --long --dirty=-dirty`.
# We don't make a direct call to git describe in cmake because it requires to copy the whole repository in the Dockerfile, not only the backend folder.
# This variable also define the downloaded JS_FRONTEND_VERSION (as a .zip from AWS - except if a frontend/build/ folder exist on the system, see 
# WebViewerPlugin/WebViewerPlugin.cmake for more information).
# @warning Build will fail if the commit version does not match a frontend .zip archive pushed to aws!
ARG VIEWER_VERSION="0.0.0-0-gxxxxxxxx-dirty"

# Copy everything required to build unit tests & the final library
COPY ./WebViewerTests/ /root/osimis-webviewer/backend/WebViewerTests/
COPY ./WebViewerPlugin/ /root/osimis-webviewer/backend/WebViewerPlugin/

# Rerun cmake with final target (the webviewer plugin & the unit tests)
# Build & cache the webviewer plugin with embedded frontend (targets: EmbeddedResourcesGenerator, OsimisWebViewer & UnitTests)
# Remove the build directory to recover space
# Remove the Orthanc viewer to avoid conflicts with the Osimis Viewer (2 buttons to open 2 viewers)
RUN mkdir /root/osimis-webviewer/frontend/ && \
    cd /root/osimis-webviewer/backend/Build && \
    cmake -DALLOW_DOWNLOADS:BOOL=ON \
    -DVIEWER_VERSION_FULL:STRING=${VIEWER_VERSION} \
    -DCMAKE_BUILD_TYPE:STRING=Release \
    -DUSE_GTEST_DEBIAN_SOURCE_PACKAGE:BOOL=ON \
    -DUSE_SYSTEM_JSONCPP:BOOL=OFF \
    -DBUILD_INTERMEDIATE_TARGETS:BOOL=ON \
    -DBUILD_FINAL_TARGETS:BOOL=ON \
    .. && \
    make -j$(nproc) EmbeddedResourcesGenerator && \
    make -j$(nproc) UnitTests && \
    make -j$(nproc) OsimisWebViewer && \
    cp -L UnitTests /root/OsimisViewerUnitTests && \
    cp -L libOsimisWebViewer.so /usr/share/orthanc/plugins/ && \
    cd /root/ && \
    rm -rf /root/osimis-webviewer && \
    rm -rf /usr/share/orthanc/plugins/libOrthancWebViewer.so
