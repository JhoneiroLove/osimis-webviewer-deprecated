xdescribe('configuration', function() {
    
    osi.beforeEach();
    osi.afterEach();

    describe('directive', function() {

        it('should provide the configuration via its controller', function() {
            // Set a configuration object
            $scope.config = {
                httpRequestPolicy: function() {

                }
            };

            // Set the web-viewer configuration using the `wvConfiguration` directive
            return osi.directive(
                '<div wv-configuration="config"></div>',
                'wv-configuration'
            )
            .then(function(directive) {
                // Retrieve wv-configuration data
                var ctrl = directive.$controller;

                // Check the configuration value equals the one set
                assert.isFunction($scope.config.httpRequestPolicy, "config.httpRequestPolicy should be a function");
                assert.deepEqual($scope.config, ctrl, "wv-configuration's controller should contain the configuration");
            });
        });


        it('should provide the HTTP GET request policy', function() {
            // Set a configuration object
            $scope.config = {
                httpRequestPolicy: function(xhrRequest) {
                    // function may either mutate xhrRequest input directly
                    // or return the modified request
                    return xhrRequest;
                }
            };

            // An example of a sample requests
            var xhrRequestExample = {
                // route: ,
                method: 'GET',
                timeout: 5000,
                withCredentials: false,
                headers: {}
            };

            // Set the web-viewer configuration using the `wvConfiguration` directive
            return osi.directive(
                '<div wv-configuration="config"></div>',
                'wv-configuration'
            )
            .then(function(directive) {
                // Retrieve wv-configuration data
                var ctrl = directive.$controller;
                
                assert.equal(ctrl.httpRequestPolicy(xhrRequestExample), xhrRequestExample);
            });
        });

        
    });

});