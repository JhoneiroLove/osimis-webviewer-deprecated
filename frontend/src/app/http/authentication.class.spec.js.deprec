describe.only('web-worker', function() {
    
    describe('authentification', function() {

        afterEach(function() {
            document.cookie = null;
        })

        it('should provide the http headers from a cookie', function() {
            // Provide a user token
            var token = 'my-super-token !';
            document.cookie = 'WebViewerAuthToken='+token+'; expires=Thu, 18 Dec 2013 12:00:00 UTC; path=/'

            // Create authentification model
            var authentification = new osimis.Authentification();

            // Expect headers to be provided
            var headers = authentification.getHttpHeaders();
            assert.deepEqual(headers, {
                WebViewerAuthToken: 'my-super-token !'
            }, "The returned header is wrong");

            // Change headers
            var token2 = 'my-super-token 2 !';
            document.cookie = 'WebViewerAuthToken='+token2+'; expires=Thu, 18 Dec 2013 12:00:00 UTC; path=/'

            // Expect headers to not be cached
            headers = authentification.getHttpHeaders();
            // the header has been changed
            assert.deepEqual(headers, {
                WebViewerAuthToken: 'my-super-token 2 !'
            }, "The returned header is wrong (probably because it's been cached)");
        });

    });

});